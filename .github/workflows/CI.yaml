on:
  push:
    branches: [ master ]
    tags: [ 'v[0-9]+.[0-9]+.[0-9]+' ]
  pull_request:
    branches: [ master ]

jobs:
  XUnit:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Verify commit exists in origin/master
      if: ${{ ! startsWith(github.event.ref, 'refs/tags/v') }}
      run: git branch --remote --contains | grep origin/master

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Build Lib
      run: dotnet build include/c#/10 --configuration Release

    - name: Build Tests
      run: dotnet build tests/c#/10 --configuration Release

    - name: Test
      run: dotnet test tests/c#/10 --configuration Release --no-build

  PHPUnit:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      matrix:
        php_version: ['8.0', '8.1'] # strings so the .0 is preserved
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Verify commit exists in origin/master
      if: ${{ ! startsWith(github.event.ref, 'refs/tags/v') }}
      run: git branch --remote --contains | grep origin/master

    - name: Test
      uses: php-actions/phpunit@v3
      with:
        vendored_phpunit_path: tests/php/${{ matrix.php_version }}/phpunit-9.5.26.phar
        php_version: ${{ matrix.php_version }}
        php_extensions: mbstring openssl
        bootstrap: include/php/${{ matrix.php_version }}/autoload.php
        test_suffix: Tests.php
        args: --colors=auto tests/php/${{ matrix.php_version }}

  Jest:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    defaults:
      run:
        working-directory: tests/ts

     steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Verify commit exists in origin/master
      if: ${{ ! startsWith(github.event.ref, 'refs/tags/v') }}
      run: git branch --remote --contains | grep origin/master

    - name: Setup Node
      uses: actions/setup-node@v1

    - name: Setup Jest
      run: npm ci

    - name: Test
      run: npm test

  build-and-publish-nuget:
    needs: [ XUnit, PHPUnit ]
    runs-on: ubuntu-latest
    timeout-minutes: 15
    if: startsWith(github.event.ref, 'refs/tags/v')
    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Extract release notes
      run: |
        git log --pretty=format:'%d %s' $REF | perl -pe 's| \(.*tag: v(\d+.\d+.\d+(-preview\d{3})?)(, .*?)*\)|\n## \1\n|g' > RELEASE-NOTES

    - name: Set VERSION variable from tag
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_ENV

    - name: Validate version
      run: grep -i "<Version>${VERSION}" include/c#/10/HsBuildCodes.csproj

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 6.0.x

    - name: Build
      run: dotnet build include/c#/10 --configuration Release

    - name: Pack
      run: dotnet pack include/c#/10 --configuration Release --no-build --output .
      
    - name: Push
      run: dotnet nuget push "*.${VERSION}.nupkg" -k ${NUGET_API_KEY} && dotnet nuget push "*.${VERSION}.snupkg" -k ${NUGET_API_KEY}
      env:
        NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
